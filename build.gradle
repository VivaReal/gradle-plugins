allprojects {
    apply plugin: 'maven-publish'
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'sonar-runner'
}


subprojects {
    apply plugin: 'groovy'
    apply plugin: 'maven'
    apply plugin: 'eclipse'

    group = 'com.vivareal.build.gradle'

    repositories {
	mavenCentral()
	maven { url 'https://repo.springsource.org/libs-release' }
    }

    dependencies {
	compile gradleApi()
	compile localGroovy()
    }

    uploadArchives {

	repositories.mavenDeployer {
		
	    repository(url: project.hasProperty('repositoryReleasesUrl')?project.ext.repositoryReleasesUrl:'') {
			authentication(userName: project.hasProperty('repositoryUser')?project.ext.repositoryUser:'', 
			password: project.hasProperty('repositoryPwd')?project.ext.repositoryPwd:'')
	    }

	    snapshotRepository(url: project.hasProperty('repositorySnapshotsUrl')?project.ext.repositorySnapshotsUrl:'') {
			authentication(userName: project.hasProperty('repositoryUser')?project.ext.repositoryUser:'', 
			password: project.hasProperty('repositoryPwd')?project.ext.repositoryPwd:'')
	    }
	
	
	}
    }
}

repositories {
    maven {url "http://repo.grails.org/grails/core/"}
    mavenCentral()
}


project(':elastic-beanstalk') {

    version = '1.0.6'

    dependencies {
	compile localGroovy()
	compile gradleApi()
	compile 'com.amazonaws:aws-java-sdk:1.6.12'
	compile 'net.java.dev.jets3t:jets3t:0.9.0'
    }
}

project(':aws-ec2') {

    version = '1.0.4'

    dependencies {
	compile localGroovy()
	compile gradleApi()
	compile 'com.amazonaws:aws-java-sdk:1.6.12'
	compile 'net.java.dev.jets3t:jets3t:0.9.0'
	compile 'org.apache.directory.studio:org.apache.commons.codec:1.8'
    }
}

sonarRunner {
    sonarProperties {
property "sonar.propertyjectName", "VivaReal Gradle Plugins"
property "sonar.projectDescription", "VivaReal Gradle Plugins"
property "test.ignoreFailures", "true"
property "sonar.propertyhost.url", sonarUrl
property "sonar.jdbc.url", sonarJdbcUrl
property    "sonar.jdbc.driverClassName", "com.mysql.jdbc.Driver"
property "sonar.sonarjdbc.username", sonarJdbcUsername
property "sonar.jdbc.password", sonarrJdbcPassword
    }
}
