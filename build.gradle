apply plugin: 'sonar-runner'

allprojects {

    apply plugin: 'maven'

    group = 'com.vivareal.build.gradle'

    repositories {
	mavenLocal()
	mavenCentral()
	maven { url 'https://repo.springsource.org/libs-release' }
    }
    
    buildscript {
	repositories {
	    mavenCentral()
	}
    }
    
    ext {
	AWS_SDK_VERSION = '1.8.9.1'
    }

    uploadArchives {

	repositories.mavenDeployer {

	    repository(url: project.hasProperty('repositoryReleasesUrl')?project.ext.repositoryReleasesUrl:'') {
		authentication(userName: project.hasProperty('repositoryUser')?project.ext.repositoryUser:'',
		password: project.hasProperty('repositoryPwd')?project.ext.repositoryPwd:'')
	    }

	    snapshotRepository(url: project.hasProperty('repositorySnapshotsUrl')?project.ext.repositorySnapshotsUrl:'') {
		authentication(userName: project.hasProperty('repositoryUser')?project.ext.repositoryUser:'',
		password: project.hasProperty('repositoryPwd')?project.ext.repositoryPwd:'')
	    }
	}
    }
}

repositories {
    mavenLocal()
    maven {url "http://repo.grails.org/grails/core/"}
    mavenCentral()
}

sonarRunner {
    sonarProperties {
	property "sonar.projectName", "VivaReal Gradle Plugins"
	property "sonar.projectDescription", "VivaReal Gradle Plugins"
	property "test.ignoreFailures", "true"
	property "sonar.host.url", sonarUrl
	property "sonar.jdbc.url", sonarJdbcUrl
	property "sonar.jdbc.driverClassName", "com.mysql.jdbc.Driver"
	property "sonar.jdbc.username", sonarJdbcUsername
	property "sonar.jdbc.password", sonarJdbcPassword
    }
}
